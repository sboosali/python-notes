operators:
 # concrete syntax of operator-precedence grammar
 # in descending precedence

 - "[ ]"
 - '" "'

 - < where
 - ~ but
# - ~ as ~

 - :=
 - :-
 - ["<", ">"]
 - ":"
 - "="
 - "~"
 - v

 - [<-, ->]
 - [<--, -->]
 - [<=, =>, <==, ==>]
 - [<~, ~>]

 - "{ }"

 - .
 - ","

 - ( )

 - ==
 - [+, -]
 - ["*", "/"]
 - ^

default_min_spaces: 1

min_spaces:

 ( )   : 0
 "[ ]" : 0
 "{ }" : 0

 +   : 0
 "-" : 0
 "*" : 0
 /   : 0
 ^   : 0

order:

 - :=
 - :-
 - "="

 - <
 - ">"
 - < where
 - ":"

 - "~"
 - ~ but

 - ->
 - <-
 - ~>
 - <~
 - <--
 - -->
 - =>
 - <=
 - ==>
 - <==

head_operators:

 - :=
 - :-
 - "="
 - "~"

 - ":"
 - ["<", ">"]

 - < where
 - ~ but
